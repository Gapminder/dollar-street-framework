{
  "name": "dollar-street-framework",
  "version": "1.0.0",
  "private": true,
  "description": "Dollar street framework - build your own open-source application for investigation how people live",
  "main": "index.js",
  "scripts": {
    "start": "npm run build:server-puppeteer && npm run build:server && npm run build:client && npm run build:client-cms && (nohup docker-compose up &) && (nohup npm run server-puppeteer &) && (nohup npm run server &) && (nohup npm run server-cms &)",
    "build:server": "./node_modules/.bin/tsc --project ./server/tsconfig.json",
    "build:server-puppeteer": "./node_modules/.bin/tsc --project ./deployment/gcp/puppeteer-v2/tsconfig.server.json",
    "prebuild:client": "TS_NODE_PROJECT=./common/tsconfig.credentials.json ts-node ./common/credentials-ui-prebuild.service.ts && prettier --single-quote --write \"client/src/environments/*.ts\"",
    "build:client": "ng build --environment=${MODE_ENV:=local}.${NODE_ENV:=ds} ",
    "postbuild:client": "TS_NODE_PROJECT=./common/tsconfig.html.json node -r ts-node/register common/index-customizer.ts",
    "build:client:prod": "MODE_ENV=prod npm run build:client -- --prod --named-chunks --aot",
    "build:client:dev": "MODE_ENV=dev npm run build:client -- --prod --named-chunks --aot",
    "build:client:ci": "MODE_ENV=ci npm run build:client -- --prod --named-chunks --aot",
    "build:client:local": "MODE_ENV=local npm run build:client -- ",
    "build:client:release": "MODE_ENV=release npm run build:client -- --prod --named-chunks --aot",
    "build:client:prod:ds": "NODE_ENV=ds npm run build:client:prod -- --base-href /dollar-street/ --output-path ./dist/client/dollar-street",
    "build:client:pre-prod:ds": "NODE_ENV=ds npm run build:client:prod -- --base-href /dollar-street/ --output-path ./dist/client/dollar-street",
    "build:client:dev:ds": "NODE_ENV=ds npm run build:client:dev -- --base-href /dollar-street/ --output-path ./dist/client/dollar-street",
    "build:client:ci:ds": "NODE_ENV=ds npm run build:client:ci -- ",
    "build:client:local:ds": "NODE_ENV=ds npm run build:client:local -- --watch --poll",
    "build:client:release:ds": "NODE_ENV=ds npm run build:client:release -- ",
    "build:client:local-as-prod:ds": "NODE_ENV=ds npm run build:client:local -- --prod --named-chunks --aot",
    "build:client:prod:clinics": "NODE_ENV=clinics npm run build:client:prod -- ",
    "build:client:local:clinics": "NODE_ENV=clinics npm run build:client:local -- ",
    "build:client:prod:schools": "NODE_ENV=schools npm run build:client:prod --",
    "build:client:local:schools": "NODE_ENV=schools npm run build:client:local -- ",
    "build:client:prod:lectures": "NODE_ENV=lectures npm run build:client:prod -- ",
    "build:client:local:lectures": "NODE_ENV=lectures npm run build:client:local -- ",
    "build:client:dev:warehouses": "NODE_ENV=warehouses npm run build:client:dev -- ",
    "build:client:local:warehouses": "NODE_ENV=warehouses npm run build:client:local -- ",
    "build:client:dev:crazy": "NODE_ENV=crazy npm run build:client:dev -- ",
    "build:client:local:crazy": "NODE_ENV=crazy npm run build:client:local -- ",
    "build:cfunction": "./node_modules/.bin/rollup -c deployment/gcp/puppeteer-v2/rollup.config.js",
    "postbuild:cfunction": "./node_modules/.bin/flat ./credentials/${MODE_ENV:=local}.${NODE_ENV:=ds}.json | ./node_modules/.bin/json2yaml > ./dist/puppeteer/${MODE_ENV:=local}.${NODE_ENV:=ds}.yaml",
    "build:server-cms": "./node_modules/.bin/tsc --project ./server/tsconfig.json",
    "build:client-cms": "webpack --config ./cms/webpack.config.js --progress",
    "server": "node $NODE_DEBUG_OPTION ./dist/server/src/ds.consumer.app.js",
    "server:prod": "MODE_ENV=prod npm run server",
    "server:dev": "MODE_ENV=dev npm run server",
    "server:ci": "MODE_ENV=ci npm run server",
    "server:local": "npm run server",
    "server:schools": "MODE_ENV=prod NODE_ENV=schools npm run server",
    "server:clinics": "MODE_ENV=prod NODE_ENV=clinics npm run server",
    "server:warehouse": "MODE_ENV=dev NODE_ENV=warehouse npm run server",
    "server:release": "MODE_ENV=release NODE_ENV=ds npm run server",
    "server-cms": "node $NODE_DEBUG_OPTION ./dist/cms/server/ds.cms.api.js",
    "server-puppeteer": "node $NODE_DEBUG_OPTION ./dist/server-puppeteer/deployment/gcp/puppeteer-v2/server.js",
    "cfunction": "npm run build:cfunction && node ./deployment/gcp/puppeteer/server.js",
    "splash": "docker pull scrapinghub/splash && docker run -p 8050:8050 -p 5023:5023 --network=host scrapinghub/splash",
    "tests": "npm run test:all && npm run test:client",
    "tests:local": "npm run tests && npm run e2e:local",
    "tests:dev": "npm run tests && npm run e2e:dev",
    "tests:prod": "npm run tests && npm run e2e:prod",
    "test:all": "npm run test:unit && npm run test:api && npm run test:e2e",
    "test:unit": "npm run test:unit:server && npm run test:unit:client",
    "test:unit:server": "TS_NODE_PROJECT=./server/tsconfig.json mocha --timeout 20000 -r ts-node/register server/src/**/*.spec.ts",
    "test:unit:client": "ng test -sr -cc --source=false",
    "test:api": "npm run test:api:server && npm run test:api:server-cms",
    "test:api:server": "TS_NODE_PROJECT=./server/tests/api/tsconfig.api.json mocha --timeout 500000 -r ts-node/register server/tests/api/*.api-spec.ts",
    "test:api:server-cms": "TS_NODE_PROJECT=./server/tsconfig.json mocha --timeout 20000 -r ts-node/register cms/server/tests/api/*.spec.ts",
    "test:e2e": "npm run retest:e2e:client:${MODE_ENV=local}",
    "test:e2e:client": "npm run retest:e2e:client:${MODE_ENV=local}",
    "pretest:e2e:client": "npm run build:server && npm build:client",
    "retest:e2e:client": "API_VERSION=v1 protractor client/protractor.conf.js",
    "retest:e2e:client:local": "API_VERSION=v1 ng e2e --webdriver-update=false --serve=false --base-href=http://localhost:3000",
    "retest:e2e:client:ci": "API_VERSION=v1 ng e2e --webdriver-update=false --serve=false --base-href=http://localhost:3000",
    "retest:e2e:client:dev": "API_VERSION=v1 protractor --baseUrl=http://dev.dollarstreet.org/dollar-street client/protractor.conf.js",
    "retest:e2e:client:prod": "API_VERSION=v1 protractor --baseUrl=https://www.gapminder.org/dollar-street client/protractor.conf.js",
    "codecov": "cat ./coverage/report-lcov/lcov.info | codecov -t $CODECOV_KEY",
    "lint": "npm run lint:server && npm run lint:client",
    "lint:server": "tslint --config ./server/tslint.json --project ./server/tsconfig.json --fix --format stylish",
    "lint:client": "ng lint",
    "update:travis-envs": "rm -rf envs.tar envs.tar.enc && tar -cvf envs.tar credentials && ./encrypt-travis-plugin.sh before_install -1 3 .travis.yml && travis encrypt-file envs.tar --add --org && echo \"- tar xvf envs.tar\" >> .travis.yml",
    "update:webdriver": "webdriver-manager update --gecko=false",
    "update:codecov": "cat ./coverage/report-lcov/lcov.info | codecov -t $CODECOV_KEY",
    "update:p-queue": "rm -rf node_modules/p-queue/node_modules",
    "update:db-incomes": "DONOR_DB=mongodb://localhost/dollarstreet TARGET_DB=mongodb://localhost/dollarstreet TS_NODE_PROJECT=./deployment/gcp/db/tsconfig.json ts-node ./deployment/gcp/db/index.ts",
    "postinstall": "npm run update:p-queue && concurrently \"npm run update:webdriver\"",
    "predeploy:cfunction": "npm run build:cfunction",
    "deploy:cfunction": "(cd dist/puppeteer; (gcloud beta functions deploy ${NODE_ENV:=ds}-puppeteer-${MODE_ENV:=local} --region=europe-west1 --trigger-http --entry-point=createImage --memory=1024MB --runtime=nodejs10  --timeout=120s --env-vars-file=${MODE_ENV:=local}.${NODE_ENV:=ds}.yaml  || true))",
    "deploy:github": "npm run build && npm run publish:gh-pages",
    "deploy:firebase": "npm run build && npm run publish:firebase",
    "publish": "",
    "publish:ds:prod": "NODE_ENV=ds MODE_ENV=prod npm run publish",
    "publish:ds:dev": "NODE_ENV=ds MODE_ENV=dev npm run publish",
    "publish:ds:any": "NODE_ENV=ds npm run publish",
    "publish:gh-pages": "./tools/gh-pages-publish.js",
    "publish:firebase": "firebase deploy"
  },
  "husky": {
    "hooks": {
      "commit-msg": "validate-commit-msg",
      "pre-commit": "npm run prebuild:client && git add client/src/environments/*.ts .angular-cli.json && lint-staged && npm run lint:server"
    }
  },
  "lint-staged": {
    "*.{ts,js}": [
      "prettier --write",
      "git add"
    ],
    "*.html": [
      "prettier --write --html-whitespace-sensitivity ignore --parser angular",
      "git add"
    ],
    "*.css": [
      "prettier --write --parser css",
      "git add"
    ]
  },
  "dependencies": {
    "@angular/animations": "5.2.11",
    "@angular/cli": "1.7.3",
    "@angular/common": "5.2.11",
    "@angular/compiler": "5.2.11",
    "@angular/compiler-cli": "5.2.11",
    "@angular/core": "5.2.11",
    "@angular/forms": "5.2.11",
    "@angular/http": "5.2.11",
    "@angular/platform-browser": "5.2.11",
    "@angular/platform-browser-dynamic": "5.2.11",
    "@angular/router": "5.2.11",
    "@ngrx/effects": "4.0.2",
    "@ngrx/store": "4.0.2",
    "@types/async": "2.0.40",
    "@types/bunyan": "1.8.4",
    "@types/chai": "4.1.7",
    "@types/core-js": "0.9.39",
    "@types/cron": "1.7.0",
    "@types/d3": "4.9.0",
    "@types/d3-axis": "1.0.8",
    "@types/d3-scale": "1.0.10",
    "@types/d3-selection": "1.1.0",
    "@types/es6-promise": "3.3.0",
    "@types/eventemitter3": "2.0.2",
    "@types/express": "4.0.35",
    "@types/gm": "1.18.1",
    "@types/jasmine": "2.6.1",
    "@types/jasminewd2": "2.0.3",
    "@types/joi": "14.3.0",
    "@types/lodash": "4.14.116",
    "@types/mime": "0.0.29",
    "@types/mkdirp": "0.5.2",
    "@types/mocha": "5.2.5",
    "@types/mongodb": "3.1.17",
    "@types/mongoose": "5.5.6",
    "@types/p-queue": "3.2.1",
    "@types/promise": "7.1.30",
    "@types/puppeteer": "1.3.4",
    "@types/request-promise-native": "1.0.16",
    "@types/sanitize-filename": "1.1.28",
    "@types/shelljs": "0.8.5",
    "@types/sinon": "4.1.2",
    "@types/sinon-as-promised": "4.0.12",
    "@types/sinon-mongoose": "1.3.9",
    "@types/stripe": "6.25.7",
    "@types/uuid": "3.4.4",
    "angular": "1.4.7",
    "angular-bootstrap": "0.12.2",
    "angular-resource": "1.4.7",
    "angular-sanitize": "1.4.7",
    "angular-touch": "1.4.7",
    "angular-ui-router": "0.2.15",
    "angular2-infinite-scroll": "0.3.5",
    "angulartics-google-analytics": "0.1.4",
    "angulartics2": "3.3.0",
    "async": "2.6.1",
    "aws-sdk": "2.94.0",
    "babel-polyfill": "6.23.0",
    "bcrypt-nodejs": "0.0.3",
    "body-parser": "1.17.2",
    "bootstrap": "3.3.7",
    "bunyan": "1.8.12",
    "bunyan-prettystream": "0.1.3",
    "clean-webpack-plugin": "0.1.16",
    "compression": "1.6.2",
    "concurrently": "3.5.0",
    "connect-mongo": "2.0.3",
    "cookie-parser": "1.4.3",
    "copy-webpack-plugin": "4.0.1",
    "cors": "2.8.4",
    "cron": "1.3.0",
    "crowdin": "1.0.0",
    "d3-axis": "1.0.7",
    "d3-interpolate": "1.1.5",
    "d3-scale": "1.0.6",
    "d3-selection": "1.1.0",
    "errorhandler": "1.5.1",
    "es6-promise": "4.1.0",
    "es6-shim": "0.35.3",
    "es7-reflect-metadata": "1.6.0",
    "eslint": "4.3.0",
    "eventemitter3": "3.1.2",
    "exports-loader": "0.6.4",
    "express": "4.15.3",
    "express-session": "1.16.1",
    "express-tgz": "0.0.3",
    "file-loader": "0.11.2",
    "flat": "4.1.0",
    "glob": "7.1.2",
    "gm": "1.23.1",
    "html-loader": "0.4.5",
    "jquery": "3.5.0",
    "lodash": "4.17.11",
    "lodash-es": "4.17.11",
    "method-override": "3.0.0",
    "migration": "0.3.0",
    "mime": "1.3.6",
    "mkdirp": "0.5.1",
    "moment": "2.18.1",
    "mongodb": "3.1.13",
    "mongoose": "5.6.8",
    "mongoose-legacy-pluralize": "1.0.2",
    "morgan": "1.9.1",
    "multer": "1.4.1",
    "mustache": "2.3.0",
    "nconf": "0.8.4",
    "newrelic": "2.0.2",
    "ng-infinite-scroll": "1.2.0",
    "ng2-bootstrap": "1.1.16",
    "ng2-translate": "5.0.0",
    "ngx-clipboard": "10.0.0",
    "ngx-toastr": "8.8.0",
    "node-fetch": "2.1.1",
    "node-uuid": "1.4.8",
    "nodemailer": "4.0.1",
    "p-queue": "6.1.1",
    "passport": "0.3.2",
    "passport-local": "1.0.0",
    "piexifjs": "1.0.4",
    "plato": "1.7.0",
    "prettier": "1.16.4",
    "pug": "2.0.3",
    "puppeteer": "1.16.0",
    "raw-loader": "0.5.1",
    "reflect-metadata": "0.1.10",
    "replace": "1.1.0",
    "request": "2.88.0",
    "request-promise-native": "1.0.7",
    "rmdir": "1.2.0",
    "rxjs": "5.5.6",
    "sanitize-filename": "1.6.2",
    "serve-favicon": "2.5.0",
    "shelljs": "0.7.8",
    "shorturl-2": "0.0.6",
    "sinon-as-promised": "4.0.3",
    "socket.io": "2.0.3",
    "source-map-loader": "0.2.1",
    "stripe": "6.28.0",
    "supertest": "4.0.2",
    "ts-node": "8.3.0",
    "typescript": "2.7.2",
    "typings": "2.1.1",
    "typings-core": "2.3.3",
    "uglify-js": "2.8.29",
    "unzip": "0.1.11",
    "url-loader": "0.5.8",
    "url-parse": "1.4.4",
    "uuid": "3.3.2",
    "xlsx": "0.11.0",
    "zone.js": "0.8.12"
  },
  "devDependencies": {
    "@types/node": "8.10.51",
    "@types/systemjs": "0.20.6",
    "angular-mocks": "1.4.7",
    "browserstack-wrapper": "1.0.0",
    "browserstacktunnel-wrapper": "2.0.0",
    "chai": "4.2.0",
    "chai-interface": "2.0.3",
    "codecov": "2.2.0",
    "codelyzer": "3.2.0",
    "coveralls": "2.13.1",
    "cpy": "5.0.0",
    "del": "2.2.2",
    "eslint-config-valorsoft": "0.1.0",
    "firebase": "4.1.1",
    "gh-pages": "1.0.0",
    "gitignore-to-glob": "0.3.0",
    "gulp": "3.9.1",
    "husky": "1.3.1",
    "istanbul-instrumenter-loader": "2.0.0",
    "jasmine": "2.9.0",
    "jasmine-core": "2.9.1",
    "jasmine-data-provider": "2.2.0",
    "jasmine-marbles": "0.2.0",
    "jasmine-spec-reporter": "4.1.0",
    "joi": "14.3.1",
    "json2yaml": "1.1.0",
    "karma": "1.7.0",
    "karma-browserstack-launcher": "1.2.0",
    "karma-chai": "0.1.0",
    "karma-chai-sinon": "0.1.5",
    "karma-chrome-launcher": "2.1.1",
    "karma-cli": "1.0.1",
    "karma-coverage": "1.1.1",
    "karma-coverage-istanbul-reporter": "1.3.0",
    "karma-htmlfile-reporter": "0.3.8",
    "karma-jasmine": "1.1.0",
    "karma-jasmine-html-reporter": "0.2.2",
    "karma-mocha": "0.2.0",
    "karma-ng-html2js-preprocessor": "0.2.0",
    "karma-phantomjs-launcher": "1.0.4",
    "karma-remap-istanbul": "0.6.0",
    "karma-sauce-launcher": "1.1.0",
    "karma-sinon": "1.0.4",
    "karma-sourcemap-loader": "0.3.7",
    "karma-spec-reporter": "0.0.31",
    "karma-verbose-reporter": "0.0.6",
    "karma-webpack": "1.7.0",
    "lint-staged": "9.2.1",
    "mocha": "5.2.0",
    "mocha-istanbul": "0.3.0",
    "ng2-mock-component": "0.1.1",
    "phantomjs": "2.1.7",
    "phantomjs-polyfill": "0.0.2",
    "phantomjs-prebuilt": "2.1.14",
    "protractor": "5.4.2",
    "rollup": "1.15.0",
    "rollup-plugin-copy": "3.0.0",
    "rollup-plugin-typescript2": "0.21.1",
    "shelljs": "0.7.8",
    "sinon": "6.1.5",
    "sinon-mongoose": "2.3.0",
    "tslint": "5.13.1",
    "tslint-config-valorsoft": "2.2.1",
    "validate-commit-msg": "2.14.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Gapminder/dollar-street-framework.git"
  },
  "keywords": [
    "dollarstreet",
    "framework",
    "cms",
    "dollar-street",
    "deploy",
    "Data Science",
    "study",
    "investigation",
    "image",
    "comparison",
    "open source"
  ],
  "author": "Valor Software",
  "license": "GPL-3.0",
  "bugs": {
    "url": "https://github.com/Gapminder/dollar-street-framework/issues"
  },
  "homepage": "https://github.com/Gapminder/dollar-street-framework#readme"
}
